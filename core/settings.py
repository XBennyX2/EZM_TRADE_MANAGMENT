"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import environ
from urllib.parse import urlparse

load_dotenv()  # loads the variables from .env into environment variables


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env')) 

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^yks9ofa5b)o(8w32xk2f$veo+c+o8sbukcdl-7ixv7z@su2c('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'testserver']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'users',
    'store',
    'Inventory',
    'transactions',
    'payments',
    'webfront',
]

AUTH_USER_MODEL = 'users.CustomUser'

# Authentication URLs
LOGIN_URL = '/users/login/'
# LOGIN_REDIRECT_URL is handled by custom login view based on user role

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'users.middleware.FirstLoginPasswordChangeMiddleware',  # Add after messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),  # Existing templates directory
            BASE_DIR / 'templates',  # Add this if templates are in the same directory as apps
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database Configuration
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# SQLite Database Configuration (Default)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

print("Database configured: Using SQLite")

# Neon PostgreSQL Database Configuration (Commented out)
# DATABASE_URL = 'postgresql://neondb_owner:npg_CRVEs6MTg9cv@ep-noisy-boat-a9tqvkrl-pooler.gwc.azure.neon.tech/neondb?sslmode=require&channel_binding=require'
#
# # Parse the DATABASE_URL for Neon PostgreSQL
# parsed_url = urlparse(DATABASE_URL)
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': parsed_url.path[1:],  # Remove leading slash
#         'USER': parsed_url.username,
#         'PASSWORD': parsed_url.password,
#         'HOST': parsed_url.hostname,
#         'PORT': parsed_url.port or '5432',
#         'OPTIONS': {
#             'sslmode': 'require',  # Required for Neon
#         },
#     }
# }
#
# print("Database configured: Using Neon PostgreSQL")


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Shopping Cart Configuration
CART_SESSION_ID = 'cart'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# For global static files in the root-level static/ folder
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration - Django Default Backend
# Using Django's console backend as default for development
EMAIL_BACKEND = os.getenv("EMAIL_BACKEND", 'django.core.mail.backends.smtp.EmailBackend')
EMAIL_HOST = os.getenv("EMAIL_HOST")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", 587))
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 60

# Company Email Configuration
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", 'EZM Trade Management <noreply@ezmtrade.com>')
SERVER_EMAIL = DEFAULT_FROM_EMAIL
COMPANY_NAME = os.getenv("COMPANY_NAME", 'EZM Trade Management')
COMPANY_EMAIL = os.getenv("COMPANY_EMAIL", 'noreply@ezmtrade.com')

# Email backend status
if EMAIL_BACKEND == 'django.core.mail.backends.smtp.EmailBackend':
    print(f"Email configured: Using SMTP backend with {EMAIL_HOST}")
    print(f"From: {DEFAULT_FROM_EMAIL}")
    print(f"Company: {COMPANY_NAME}")
else:
    print("Email not fully configured: Check your .env file")

# Cart session configuration
CART_SESSION_ID = 'cart'

# Chapa Payment Gateway Configuration
CHAPA_PUBLIC_KEY = 'CHAPUBK_TEST-rcdxqVTYWaIUAhVJ7Ip2pOPsWWpoINp6'
CHAPA_SECRET_KEY = 'CHASECK_TEST-mvksKxpc12HVNl2S9HwDbd3Wzgj8rHp3'
CHAPA_BASE_URL = 'https://api.chapa.co/v1'
CHAPA_WEBHOOK_SECRET = 'your_webhook_secret_here'  # You should set this in Chapa dashboard

# Currency Configuration
DEFAULT_CURRENCY = 'ETB'
CURRENCY_SYMBOL = 'ETB'